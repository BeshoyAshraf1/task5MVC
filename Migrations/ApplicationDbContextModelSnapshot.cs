// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using task3.Models;

#nullable disable

namespace task3.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("task3.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Degree")
                        .HasColumnType("float");

                    b.Property<double>("MinDegree")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = 100.0,
                            MinDegree = 60.0,
                            Name = "Introduction to Programming"
                        },
                        new
                        {
                            Id = 2,
                            Degree = 100.0,
                            MinDegree = 70.0,
                            Name = "Advanced Mathematics"
                        },
                        new
                        {
                            Id = 3,
                            Degree = 100.0,
                            MinDegree = 75.0,
                            Name = "Quantum Physics"
                        },
                        new
                        {
                            Id = 4,
                            Degree = 100.0,
                            MinDegree = 65.0,
                            Name = "Organic Chemistry"
                        },
                        new
                        {
                            Id = 5,
                            Degree = 100.0,
                            MinDegree = 80.0,
                            Name = "Genetics"
                        });
                });

            modelBuilder.Entity("task3.Models.Courseresult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<double>("Degree")
                        .HasColumnType("float");

                    b.Property<int>("traineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("traineeId");

                    b.ToTable("Courseresults");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Degree = 95.0,
                            traineeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            Degree = 88.0,
                            traineeId = 2
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            Degree = 92.0,
                            traineeId = 3
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            Degree = 85.0,
                            traineeId = 4
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            Degree = 90.0,
                            traineeId = 5
                        });
                });

            modelBuilder.Entity("task3.Models.Depratment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("managername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Depratments");

                    b.HasData(
                        new
                        {
                            id = 1,
                            managername = "John Doe",
                            name = "Computer Science"
                        },
                        new
                        {
                            id = 2,
                            managername = "Jane Smith",
                            name = "Mathematics"
                        },
                        new
                        {
                            id = 3,
                            managername = "Albert Einstein",
                            name = "Physics"
                        },
                        new
                        {
                            id = 4,
                            managername = "Marie Curie",
                            name = "Chemistry"
                        },
                        new
                        {
                            id = 5,
                            managername = "Charles Darwin",
                            name = "Biology"
                        });
                });

            modelBuilder.Entity("task3.Models.Instractor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DepratmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepratmentId");

                    b.ToTable("Instractors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            DepratmentId = 1,
                            Name = "Alice Johnson",
                            Salary = 50000,
                            address = "123 Main St",
                            image = "alice.jpg"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 2,
                            DepratmentId = 2,
                            Name = "Bob Lee",
                            Salary = 55000,
                            address = "456 Elm St",
                            image = "bob.jpg"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 3,
                            DepratmentId = 3,
                            Name = "Charlie Brown",
                            Salary = 60000,
                            address = "789 Pine St",
                            image = "charlie.jpg"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 4,
                            DepratmentId = 4,
                            Name = "Diana Prince",
                            Salary = 62000,
                            address = "101 Oak St",
                            image = "diana.jpg"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 5,
                            DepratmentId = 5,
                            Name = "Eve Adams",
                            Salary = 65000,
                            address = "202 Maple St",
                            image = "eve.jpg"
                        });
                });

            modelBuilder.Entity("task3.Models.trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("trainees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Grade = 85.5,
                            Name = "Tom Brown",
                            address = "123 Maple St",
                            image = "tom.jpg"
                        },
                        new
                        {
                            Id = 2,
                            Grade = 90.0,
                            Name = "Sarah Green",
                            address = "456 Oak St",
                            image = "sarah.jpg"
                        },
                        new
                        {
                            Id = 3,
                            Grade = 88.0,
                            Name = "James Blue",
                            address = "789 Pine St",
                            image = "james.jpg"
                        },
                        new
                        {
                            Id = 4,
                            Grade = 92.5,
                            Name = "Emma White",
                            address = "101 Elm St",
                            image = "emma.jpg"
                        },
                        new
                        {
                            Id = 5,
                            Grade = 87.0,
                            Name = "Liam Black",
                            address = "202 Main St",
                            image = "liam.jpg"
                        });
                });

            modelBuilder.Entity("task3.Models.Courseresult", b =>
                {
                    b.HasOne("task3.Models.Course", "Courses")
                        .WithMany("Courseresults")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("task3.Models.trainee", "trainees")
                        .WithMany("Courseresults")
                        .HasForeignKey("traineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("trainees");
                });

            modelBuilder.Entity("task3.Models.Instractor", b =>
                {
                    b.HasOne("task3.Models.Course", "Courses")
                        .WithMany("Instractors")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("task3.Models.Depratment", "Depratments")
                        .WithMany("Instractors")
                        .HasForeignKey("DepratmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("Depratments");
                });

            modelBuilder.Entity("task3.Models.Course", b =>
                {
                    b.Navigation("Courseresults");

                    b.Navigation("Instractors");
                });

            modelBuilder.Entity("task3.Models.Depratment", b =>
                {
                    b.Navigation("Instractors");
                });

            modelBuilder.Entity("task3.Models.trainee", b =>
                {
                    b.Navigation("Courseresults");
                });
#pragma warning restore 612, 618
        }
    }
}
